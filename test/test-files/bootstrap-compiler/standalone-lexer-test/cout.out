Token(type=101, text="#!", line=1, col: 1)
Token(type=57, text="[", line=1, col: 3)
Token(type=108, text="core", line=1, col: 4)
Token(type=96, text=".", line=1, col: 8)
Token(type=108, text="compiler", line=1, col: 9)
Token(type=96, text=".", line=1, col: 17)
Token(type=108, text="alwaysKeepOnNameCollision", line=1, col: 18)
Token(type=91, text="=", line=1, col: 44)
Token(type=51, text="true", line=1, col: 46)
Token(type=58, text="]", line=1, col: 50)
Token(type=112, text="// Link external functions", line=3, col: 1)
Token(type=49, text="ext", line=4, col: 1)
Token(type=17, text="f", line=4, col: 5)
Token(type=84, text="<", line=4, col: 6)
Token(type=15, text="heap", line=4, col: 7)
Token(type=5, text="byte", line=4, col: 12)
Token(type=78, text="*", line=4, col: 16)
Token(type=83, text=">", line=4, col: 17)
Token(type=108, text="malloc", line=4, col: 19)
Token(type=55, text="(", line=4, col: 25)
Token(type=12, text="unsigned", line=4, col: 26)
Token(type=4, text="long", line=4, col: 35)
Token(type=56, text=")", line=4, col: 39)
Token(type=93, text=";", line=4, col: 40)
Token(type=49, text="ext", line=5, col: 1)
Token(type=17, text="f", line=5, col: 5)
Token(type=84, text="<", line=5, col: 6)
Token(type=15, text="heap", line=5, col: 7)
Token(type=5, text="byte", line=5, col: 12)
Token(type=78, text="*", line=5, col: 16)
Token(type=83, text=">", line=5, col: 17)
Token(type=108, text="realloc", line=5, col: 19)
Token(type=55, text="(", line=5, col: 26)
Token(type=15, text="heap", line=5, col: 27)
Token(type=5, text="byte", line=5, col: 32)
Token(type=78, text="*", line=5, col: 36)
Token(type=95, text=",", line=5, col: 37)
Token(type=12, text="unsigned", line=5, col: 39)
Token(type=4, text="long", line=5, col: 48)
Token(type=56, text=")", line=5, col: 52)
Token(type=93, text=";", line=5, col: 53)
Token(type=49, text="ext", line=6, col: 1)
Token(type=18, text="p", line=6, col: 5)
Token(type=108, text="free", line=6, col: 7)
Token(type=55, text="(", line=6, col: 11)
Token(type=15, text="heap", line=6, col: 12)
Token(type=5, text="byte", line=6, col: 17)
Token(type=78, text="*", line=6, col: 21)
Token(type=56, text=")", line=6, col: 22)
Token(type=93, text=";", line=6, col: 23)
Token(type=49, text="ext", line=7, col: 1)
Token(type=18, text="p", line=7, col: 5)
Token(type=108, text="memcpy", line=7, col: 7)
Token(type=55, text="(", line=7, col: 13)
Token(type=15, text="heap", line=7, col: 14)
Token(type=5, text="byte", line=7, col: 19)
Token(type=78, text="*", line=7, col: 23)
Token(type=95, text=",", line=7, col: 24)
Token(type=15, text="heap", line=7, col: 26)
Token(type=5, text="byte", line=7, col: 31)
Token(type=78, text="*", line=7, col: 35)
Token(type=95, text=",", line=7, col: 36)
Token(type=12, text="unsigned", line=7, col: 38)
Token(type=4, text="long", line=7, col: 47)
Token(type=56, text=")", line=7, col: 51)
Token(type=93, text=";", line=7, col: 52)
Token(type=110, text="/**
  * Allocates a new block of memory of the given size.
  *
  * @param size The size of the block to allocate.
  * @return A pointer to the allocated block, or an error if the allocation failed.
  */", line=9, col: 1)
Token(type=14, text="public", line=15, col: 1)
Token(type=17, text="f", line=15, col: 8)
Token(type=84, text="<", line=15, col: 9)
Token(type=109, text="Result", line=15, col: 10)
Token(type=84, text="<", line=15, col: 16)
Token(type=15, text="heap", line=15, col: 17)
Token(type=5, text="byte", line=15, col: 22)
Token(type=78, text="*", line=15, col: 26)
Token(type=88, text=">>", line=15, col: 27)
Token(type=108, text="sAlloc", line=15, col: 30)
Token(type=55, text="(", line=15, col: 36)
Token(type=12, text="unsigned", line=15, col: 37)
Token(type=4, text="long", line=15, col: 46)
Token(type=108, text="size", line=15, col: 51)
Token(type=56, text=")", line=15, col: 55)
Token(type=53, text="{", line=15, col: 57)
Token(type=15, text="heap", line=16, col: 5)
Token(type=5, text="byte", line=16, col: 10)
Token(type=78, text="*", line=16, col: 14)
Token(type=108, text="ptr", line=16, col: 16)
Token(type=91, text="=", line=16, col: 20)
Token(type=108, text="malloc", line=16, col: 22)
Token(type=55, text="(", line=16, col: 28)
Token(type=108, text="size", line=16, col: 29)
Token(type=56, text=")", line=16, col: 33)
Token(type=93, text=";", line=16, col: 34)
Token(type=33, text="return", line=17, col: 5)
Token(type=108, text="ptr", line=17, col: 12)
Token(type=90, text="!=", line=17, col: 16)
Token(type=42, text="nil", line=17, col: 19)
Token(type=84, text="<", line=17, col: 22)
Token(type=15, text="heap", line=17, col: 23)
Token(type=5, text="byte", line=17, col: 28)
Token(type=78, text="*", line=17, col: 32)
Token(type=83, text=">", line=17, col: 33)
Token(type=92, text="?", line=17, col: 35)
Token(type=108, text="ok", line=17, col: 37)
Token(type=55, text="(", line=17, col: 39)
Token(type=108, text="ptr", line=17, col: 40)
Token(type=56, text=")", line=17, col: 43)
Token(type=94, text=":", line=17, col: 45)
Token(type=108, text="err", line=17, col: 47)
Token(type=55, text="(", line=17, col: 50)
Token(type=42, text="nil", line=17, col: 51)
Token(type=84, text="<", line=17, col: 54)
Token(type=15, text="heap", line=17, col: 55)
Token(type=5, text="byte", line=17, col: 60)
Token(type=78, text="*", line=17, col: 64)
Token(type=83, text=">", line=17, col: 65)
Token(type=95, text=",", line=17, col: 66)
Token(type=107, text="Out of memory occurred!", line=17, col: 68)
Token(type=56, text=")", line=17, col: 93)
Token(type=93, text=";", line=17, col: 94)
Token(type=54, text="}", line=18, col: 1)
Token(type=110, text="/**
  * Reallocates a block of memory to the given size.
  *
  * @param ptr The pointer to the block to reallocate.
  * @param size The new size of the block.
  * @return A pointer to the reallocated block, or an error if the reallocation failed.
  */", line=20, col: 1)
Token(type=14, text="public", line=27, col: 1)
Token(type=17, text="f", line=27, col: 8)
Token(type=84, text="<", line=27, col: 9)
Token(type=109, text="Result", line=27, col: 10)
Token(type=84, text="<", line=27, col: 16)
Token(type=15, text="heap", line=27, col: 17)
Token(type=5, text="byte", line=27, col: 22)
Token(type=78, text="*", line=27, col: 26)
Token(type=88, text=">>", line=27, col: 27)
Token(type=108, text="sRealloc", line=27, col: 30)
Token(type=55, text="(", line=27, col: 38)
Token(type=15, text="heap", line=27, col: 39)
Token(type=5, text="byte", line=27, col: 44)
Token(type=78, text="*", line=27, col: 48)
Token(type=108, text="ptr", line=27, col: 50)
Token(type=95, text=",", line=27, col: 53)
Token(type=12, text="unsigned", line=27, col: 55)
Token(type=4, text="long", line=27, col: 64)
Token(type=108, text="size", line=27, col: 69)
Token(type=56, text=")", line=27, col: 73)
Token(type=53, text="{", line=27, col: 75)
Token(type=15, text="heap", line=28, col: 5)
Token(type=5, text="byte", line=28, col: 10)
Token(type=78, text="*", line=28, col: 14)
Token(type=108, text="newPtr", line=28, col: 16)
Token(type=91, text="=", line=28, col: 23)
Token(type=108, text="realloc", line=28, col: 25)
Token(type=55, text="(", line=28, col: 32)
Token(type=108, text="ptr", line=28, col: 33)
Token(type=95, text=",", line=28, col: 36)
Token(type=108, text="size", line=28, col: 38)
Token(type=56, text=")", line=28, col: 42)
Token(type=93, text=";", line=28, col: 43)
Token(type=33, text="return", line=29, col: 5)
Token(type=108, text="newPtr", line=29, col: 12)
Token(type=90, text="!=", line=29, col: 19)
Token(type=42, text="nil", line=29, col: 22)
Token(type=84, text="<", line=29, col: 25)
Token(type=15, text="heap", line=29, col: 26)
Token(type=5, text="byte", line=29, col: 31)
Token(type=78, text="*", line=29, col: 35)
Token(type=83, text=">", line=29, col: 36)
Token(type=92, text="?", line=29, col: 38)
Token(type=108, text="ok", line=29, col: 40)
Token(type=55, text="(", line=29, col: 42)
Token(type=108, text="newPtr", line=29, col: 43)
Token(type=56, text=")", line=29, col: 49)
Token(type=94, text=":", line=29, col: 51)
Token(type=108, text="err", line=29, col: 53)
Token(type=55, text="(", line=29, col: 56)
Token(type=42, text="nil", line=29, col: 57)
Token(type=84, text="<", line=29, col: 60)
Token(type=15, text="heap", line=29, col: 61)
Token(type=5, text="byte", line=29, col: 66)
Token(type=78, text="*", line=29, col: 70)
Token(type=83, text=">", line=29, col: 71)
Token(type=95, text=",", line=29, col: 72)
Token(type=107, text="Out of memory occurred!", line=29, col: 74)
Token(type=56, text=")", line=29, col: 99)
Token(type=93, text=";", line=29, col: 100)
Token(type=54, text="}", line=30, col: 1)
Token(type=110, text="/**
  * Copies a block of memory to a new block of memory.
  *
  * @param oldPtr The pointer to the block to copy.
  * @param newPtr The pointer to the new block to copy to.
  * @param size The size of the block to copy.
  * @return A pointer to the copied block, or an error if the copy failed.
  */", line=32, col: 1)
Token(type=14, text="public", line=40, col: 1)
Token(type=17, text="f", line=40, col: 8)
Token(type=84, text="<", line=40, col: 9)
Token(type=109, text="Result", line=40, col: 10)
Token(type=84, text="<", line=40, col: 16)
Token(type=15, text="heap", line=40, col: 17)
Token(type=5, text="byte", line=40, col: 22)
Token(type=78, text="*", line=40, col: 26)
Token(type=88, text=">>", line=40, col: 27)
Token(type=108, text="sCopy", line=40, col: 30)
Token(type=55, text="(", line=40, col: 35)
Token(type=15, text="heap", line=40, col: 36)
Token(type=5, text="byte", line=40, col: 41)
Token(type=78, text="*", line=40, col: 45)
Token(type=108, text="oldPtr", line=40, col: 47)
Token(type=95, text=",", line=40, col: 53)
Token(type=15, text="heap", line=40, col: 55)
Token(type=5, text="byte", line=40, col: 60)
Token(type=78, text="*", line=40, col: 64)
Token(type=108, text="newPtr", line=40, col: 66)
Token(type=95, text=",", line=40, col: 72)
Token(type=12, text="unsigned", line=40, col: 74)
Token(type=4, text="long", line=40, col: 83)
Token(type=108, text="size", line=40, col: 88)
Token(type=56, text=")", line=40, col: 92)
Token(type=53, text="{", line=40, col: 94)
Token(type=19, text="if", line=41, col: 5)
Token(type=108, text="oldPtr", line=41, col: 8)
Token(type=89, text="==", line=41, col: 15)
Token(type=42, text="nil", line=41, col: 18)
Token(type=84, text="<", line=41, col: 21)
Token(type=15, text="heap", line=41, col: 22)
Token(type=5, text="byte", line=41, col: 27)
Token(type=78, text="*", line=41, col: 31)
Token(type=83, text=">", line=41, col: 32)
Token(type=61, text="||", line=41, col: 34)
Token(type=108, text="newPtr", line=41, col: 36)
Token(type=89, text="==", line=41, col: 43)
Token(type=42, text="nil", line=41, col: 46)
Token(type=84, text="<", line=41, col: 49)
Token(type=15, text="heap", line=41, col: 50)
Token(type=5, text="byte", line=41, col: 55)
Token(type=78, text="*", line=41, col: 59)
Token(type=83, text=">", line=41, col: 60)
Token(type=53, text="{", line=41, col: 62)
Token(type=33, text="return", line=42, col: 9)
Token(type=108, text="err", line=42, col: 16)
Token(type=55, text="(", line=42, col: 19)
Token(type=42, text="nil", line=42, col: 20)
Token(type=84, text="<", line=42, col: 23)
Token(type=15, text="heap", line=42, col: 24)
Token(type=5, text="byte", line=42, col: 29)
Token(type=78, text="*", line=42, col: 33)
Token(type=83, text=">", line=42, col: 34)
Token(type=95, text=",", line=42, col: 35)
Token(type=107, text="Cannot copy from or to nil pointer!", line=42, col: 37)
Token(type=56, text=")", line=42, col: 74)
Token(type=93, text=";", line=42, col: 75)
Token(type=54, text="}", line=43, col: 5)
Token(type=108, text="memcpy", line=44, col: 5)
Token(type=55, text="(", line=44, col: 11)
Token(type=108, text="newPtr", line=44, col: 12)
Token(type=95, text=",", line=44, col: 18)
Token(type=108, text="oldPtr", line=44, col: 20)
Token(type=95, text=",", line=44, col: 26)
Token(type=108, text="size", line=44, col: 28)
Token(type=56, text=")", line=44, col: 32)
Token(type=93, text=";", line=44, col: 33)
Token(type=33, text="return", line=45, col: 5)
Token(type=108, text="ok", line=45, col: 12)
Token(type=55, text="(", line=45, col: 14)
Token(type=108, text="newPtr", line=45, col: 15)
Token(type=56, text=")", line=45, col: 21)
Token(type=93, text=";", line=45, col: 22)
Token(type=54, text="}", line=46, col: 1)
Token(type=110, text="/**
  * Frees a block of memory.
  * The pointer is zeroed out after freeing the memory to prevent accidental double frees.
  *
  * @param ptr The pointer to the block to free.
  */", line=48, col: 1)
Token(type=14, text="public", line=54, col: 1)
Token(type=18, text="p", line=54, col: 8)
Token(type=108, text="sDealloc", line=54, col: 10)
Token(type=55, text="(", line=54, col: 18)
Token(type=15, text="heap", line=54, col: 19)
Token(type=5, text="byte", line=54, col: 24)
Token(type=78, text="*", line=54, col: 28)
Token(type=63, text="&&", line=54, col: 29)
Token(type=108, text="ptr", line=54, col: 31)
Token(type=56, text=")", line=54, col: 34)
Token(type=53, text="{", line=54, col: 36)
Token(type=19, text="if", line=55, col: 5)
Token(type=108, text="ptr", line=55, col: 8)
Token(type=89, text="==", line=55, col: 12)
Token(type=42, text="nil", line=55, col: 15)
Token(type=84, text="<", line=55, col: 18)
Token(type=15, text="heap", line=55, col: 19)
Token(type=5, text="byte", line=55, col: 24)
Token(type=78, text="*", line=55, col: 28)
Token(type=83, text=">", line=55, col: 29)
Token(type=53, text="{", line=55, col: 31)
Token(type=33, text="return", line=55, col: 33)
Token(type=93, text=";", line=55, col: 39)
Token(type=54, text="}", line=55, col: 41)
Token(type=108, text="free", line=56, col: 5)
Token(type=55, text="(", line=56, col: 9)
Token(type=108, text="ptr", line=56, col: 10)
Token(type=56, text=")", line=56, col: 13)
Token(type=93, text=";", line=56, col: 14)
Token(type=108, text="ptr", line=57, col: 5)
Token(type=91, text="=", line=57, col: 9)
Token(type=42, text="nil", line=57, col: 11)
Token(type=84, text="<", line=57, col: 14)
Token(type=15, text="heap", line=57, col: 15)
Token(type=5, text="byte", line=57, col: 20)
Token(type=78, text="*", line=57, col: 24)
Token(type=83, text=">", line=57, col: 25)
Token(type=93, text=";", line=57, col: 26)
Token(type=112, text="// Zero out to prevent accidental double frees", line=57, col: 28)
Token(type=54, text="}", line=58, col: 1)

Lexed tokens: 300
